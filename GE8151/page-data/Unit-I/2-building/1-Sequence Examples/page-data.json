{"componentChunkName":"component---src-templates-docs-js","path":"/Unit-I/2-building/1-Sequence Examples","result":{"data":{"site":{"siteMetadata":{"title":"GE8151 - Problem Solving with Python Programming","docsLocation":"https://github.com/madhusona/GE8151/tree/master/content"}},"mdx":{"fields":{"id":"adab4929-63ba-5732-b142-4347adbdd6e4","title":"Sequence Examples","slug":"/Unit-I/2-building/1-Sequence Examples"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Sequence Examples\",\n  \"metaTitle\": \"Building Blocks of Algorithm - Sequence Examples\",\n  \"metaDescription\": \"Building Blocks of Algorithm - Sequence Examples\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Swapping of two numbers with additional variable\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"Step 1: Start\\nStep 2: Read the first number a\\nStep 3: Read the second number b\\nStep 4: Consider a temporary variable, t and Assign t with a's value\\n            t=a\\nStep 5: Assign a with b's value\\n            a=b\\nStep 6: Assign b with t's value\\n            b=t\\nStep 7: Print a, b after swapping \\nStep 8: Stop\\n\")), mdx(\"h2\", null, \"Find area and circumference of a circle\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-Algorithm:\"\n  }), \"Step 1: Start\\nStep 2: Input the radius of the circle\\nStep 3: Find area and circumference of circle\\n          area=3.14*r*r\\n          circumference = 2*3.14*r\\nStep 4: Print the value of area and circumference of the circle\\nStep 5: Stop\\n\")), mdx(\"h2\", null, \"Calculate the Simple Interest for the given Principal, rate of Interest and period of time.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"Step 1: Start\\nStep 2: Input Principal Amount, Rate of interest and period of Time\\nStep 3: Find the simple Interest using formula\\n             SI= ((amount*rate*time)/100)\\nStep 4: Print Simple Interest\\nStep 5: Stop\\n\")), mdx(\"h2\", null, \"Convert Celsius to Fahrenheit\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-Step\",\n    \"metastring\": \"1: Start\",\n    \"1:\": true,\n    \"Start\": true\n  }), \"Step 2: Input Celsius\\nStep 3: Find Fahrenheit using the formula\\nF=9/5(C) +32\\nStep 4: Print Fahrenheit\\nStep 5: Stop\\n\")), mdx(\"h2\", null, \"Convert Bytes into Kilo Bytes, Mega Bytes, Giga Bytes and Tera Bytes.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-Step\",\n    \"metastring\": \"1: Start\",\n    \"1:\": true,\n    \"Start\": true\n  }), \"Step 2: Read Bytes\\nStep 3: Find KiloBytes=Bytes/1024\\nStep 4: Find MegaBytes=kiloBytes/1024\\nStep 5: Find GigaBytes=MegaBytes/1024\\nStep 6: Find TeraBytes=GigaBytes/1024\\nStep 7: Print KiloBytes, MegaBytes, GigaBytes, TeraBytes.\\nStep 8: Stop\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#swapping-of-two-numbers-with-additional-variable","title":"Swapping of two numbers with additional variable"},{"url":"#find-area-and-circumference-of-a-circle","title":"Find area and circumference of a circle"},{"url":"#calculate-the-simple-interest-for-the-given-principal-rate-of-interest-and-period-of-time","title":"Calculate the Simple Interest for the given Principal, rate of Interest and period of time."},{"url":"#convert-celsius-to-fahrenheit","title":"Convert Celsius to Fahrenheit"},{"url":"#convert-bytes-into-kilo-bytes-mega-bytes-giga-bytes-and-tera-bytes","title":"Convert Bytes into Kilo Bytes, Mega Bytes, Giga Bytes and Tera Bytes."}]},"parent":{"relativePath":"Unit-I/2-building/1-Sequence Examples.mdx"},"frontmatter":{"metaTitle":"Building Blocks of Algorithm - Sequence Examples","metaDescription":"Building Blocks of Algorithm - Sequence Examples"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/","title":"Syllabus"}}},{"node":{"fields":{"slug":"/Unit-I","title":"Unit-I"}}},{"node":{"fields":{"slug":"/Unit-II","title":"Unit - II"}}},{"node":{"fields":{"slug":"/Unit-IV","title":"Unit - IV"}}},{"node":{"fields":{"slug":"/Unit-III","title":"Unit - III"}}},{"node":{"fields":{"slug":"/Unit-V","title":"Unit - V"}}},{"node":{"fields":{"slug":"/Unit-I/1-algorithm","title":"Algorithms"}}},{"node":{"fields":{"slug":"/Unit-I/2-building","title":"Building Blocks of Algorithm"}}},{"node":{"fields":{"slug":"/Unit-I/3-functions","title":"Functions"}}},{"node":{"fields":{"slug":"/Unit-I/4-pseudocode","title":"Pseudocode"}}},{"node":{"fields":{"slug":"/Unit-I/5-Flowchart","title":"Flowchart"}}},{"node":{"fields":{"slug":"/Unit-I/6-aps","title":"Algorithmic Problem Solving"}}},{"node":{"fields":{"slug":"/Unit-I/7-illustrativeproblems","title":"Illustrative Problems"}}},{"node":{"fields":{"slug":"/Unit-II/1-Introduction","title":"Introduction to Python"}}},{"node":{"fields":{"slug":"/Unit-II/2-Installation","title":"Installation"}}},{"node":{"fields":{"slug":"/Unit-II/3-pythoninterpreter","title":"Interpreter"}}},{"node":{"fields":{"slug":"/Unit-II/4-values and types","title":"Values and Types"}}},{"node":{"fields":{"slug":"/Unit-II/5-variables","title":"Variables"}}},{"node":{"fields":{"slug":"/Unit-II/7-statement","title":"Statements"}}},{"node":{"fields":{"slug":"/Unit-II/6-Expression","title":"Expressions"}}},{"node":{"fields":{"slug":"/Unit-II/8-operators","title":"Operators"}}},{"node":{"fields":{"slug":"/Unit-II/9-precedence of operators","title":"Precedence of Operator"}}},{"node":{"fields":{"slug":"/Unit-II/comments","title":"Comments"}}},{"node":{"fields":{"slug":"/Unit-II/Illustrative programs","title":"Python Programs"}}},{"node":{"fields":{"slug":"/Unit-I/3-functions/1-function examples","title":"Function Examples"}}},{"node":{"fields":{"slug":"/Unit-I/2-building/1-Sequence Examples","title":"Sequence Examples"}}},{"node":{"fields":{"slug":"/Unit-I/2-building/2-Selection Example","title":"Selection Examples"}}},{"node":{"fields":{"slug":"/Unit-I/2-building/3-Iteration Example","title":"Iteration Examples"}}},{"node":{"fields":{"slug":"/Unit-I/4-pseudocode/examples","title":"Pseudocode examples"}}},{"node":{"fields":{"slug":"/Unit-I/7-illustrativeproblems/guess","title":"Guess a number"}}},{"node":{"fields":{"slug":"/Unit-II/8-operators/1-Arithmetic","title":"Arithmetic Operator"}}},{"node":{"fields":{"slug":"/Unit-II/8-operators/2-Comparison","title":"Comparison Operator"}}},{"node":{"fields":{"slug":"/Unit-II/8-operators/3-Logical","title":"Logical Operator"}}},{"node":{"fields":{"slug":"/Unit-II/8-operators/4-Bitwise","title":"Bitwise Operator"}}},{"node":{"fields":{"slug":"/Unit-II/8-operators/5-Assignment","title":"Assignment Operator"}}},{"node":{"fields":{"slug":"/Unit-II/8-operators/6-Membership","title":"Memebership Operator"}}},{"node":{"fields":{"slug":"/Unit-II/8-operators/7-identity","title":"Identity Operator"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"adab4929-63ba-5732-b142-4347adbdd6e4"}}}